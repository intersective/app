# GitHub Actions WorkFlow Name

name: Live environment US

#Event Trigger for this Workflow

on:
  workflow_dispatch:
  push:
    branches: [ 'release/us' ]

#Jobs to perform based on event occurred

jobs:
  release-us:
    name: release-us
    runs-on: ubuntu-latest

    #Global Env variables declare here
    env:
      REGION : us-east-1
      ENV : live # Valid values are sandbox,stage,live only
      STACK_NAME: us  # Valid values are au,us,uk,p2,lf,nu,sandbox only
      DOMAIN: us.practera.com
      SUBDOMAIN: app-v2
      BUILD_CONFIG: custom

    # Steps to execute in this job
    steps:

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis


      - name: Setup Node.js environment
        uses: actions/setup-node@v1
      
  
      - name: Install Serverless Framework
        run: |
          npm i -g serverless@2.17.0
      
 
      - name: Cache node modules
        uses: actions/cache@v2
        id: cache-node-modules
        env:
          cache-name: cache
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |
            ~/.npm
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-


      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run:  npm install

      
      - name: create ENV file
        run: |
          cat >> .env <<EOF
          ${{ secrets.P1_US_APP_V2_PROD_ENV }}
          EOF


      - name: Run lint test if present only
        run:  npm run lint --if-present

    
      - name: Run unit test if present only
        run:  npm run test --if-present


      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
  
      - name: Configure AWS credentials from ${{ env.STACK_NAME }} account in ${{ env.REGION }} region
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.P1_PROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.P1_PROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }}


      - name: Serverless create ACM certification for SSL/HTTPS
        run: |
          serverless create-cert 
         

      - name: Serverless create CDN distrubution for custom domain 
        run: |
          serverless create_domain
         

      - name: Serverless Packaging
        run: |
          serverless package --package artifacts/${{ env.ENV }} --stage ${{ env.ENV }} --region ${{ env.REGION }} -v


      - name: Serverless Deploy
        run: |
          serverless deploy --stage ${{ env.ENV }} --region ${{ env.REGION }} --package artifacts/${{ env.ENV }} -v


      # - name: Slack Notification
      #   if: always() # Pick up events even if the job fails or is canceled.
      #   uses: 8398a7/action-slack@v3
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      #     MATRIX_CONTEXT: ${{ toJson(matrix) }} # required
      #   with:
      #     status: ${{ job.status }}
      #     author_name: ${{ env.SUBDOMAIN }} deployed to ${{ env.ENV }} environemnt in ${{ env.STACK_NAME }} AWS account
      #     mention: 'here'
      #     if_mention: failure,cancelled
      #     job_name: release-us # Match the name above.
      #     fields: repo,commit,eventName,ref,workflow,message,author,job,took
      #     custom_payload: |
      #       {
      #       username: 'GitHub Action CI WorkFlow',
      #       icon_emoji: ':github:',
      #       attachments: [{
      #         color: '${{ job.status }}' === 'success' ? 'good' : ${{ job.status }}' === 'failure' ? 'danger' : 'warning',
      #         text:
      #        `${process.env.AS_REPO}\n
      #         ${process.env.AS_COMMIT}\n
      #         ${process.env.AS_EVENT_NAME}\n
      #         @${process.env.AS_REF}\n
      #         @${process.env.AS_WORKFLOW}\n
      #         ${process.env.AS_MESSAGE}\n
      #         ${process.env.AS_AUTHOR}\n
      #         ${process.env.AS_JOB}\n
      #         ${process.env.AS_TOOK}`,
      #       }]
      #       }