# GitHub Actions WorkFlow

name: SonarCloud CI - Develop Branch

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the develop branch
on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - 'e2e/**'
      - '.gitignore'
      - 'src/testing/**'
      - 'src/assets/**'
    branches: [ develop ]
    types: [opened, synchronize, reopened]
  push:
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - 'e2e/**'
      - 'src/testing/**'
      - 'src/assets/**'
    branches: [ develop ]
    

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ap-southeast-2
  AWS_USER_ID: ${{ secrets.AWS_ACCESS_USER_ID }}

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: practera-app-v2-cache-node-modules
        with:
          path: |
            ~/.npm
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Cache docker images
        uses: satackey/action-docker-layer-caching@v0.0.8
        continue-on-error: true
        with:
          key: practera-app-v2-unit-test-docker-cache-{hash}
          restore-keys: |
            practera-app-v2-unit-test-docker-cache-

      # Perform AWS ECR Login 
      - name: ECR login
        uses: aws-actions/amazon-ecr-login@v1
     
      # Perform AWS ECR Login 
      - name: Docker pull
        run: |
          docker pull ${{ env.AWS_USER_ID }}.dkr.ecr.ap-southeast-2.amazonaws.com/practera/app-v2-unit-test:HeadlessChrome-85
          docker tag ${{ env.AWS_USER_ID }}.dkr.ecr.ap-southeast-2.amazonaws.com/practera/app-v2-unit-test:HeadlessChrome-85 practera/app-v2-unit-test:HeadlessChrome-85
          test -f src/environments/environment.ts && echo "environment here" || cp src/environments/environment.local.ts src/environments/environment.ts
      
      # Perform Unit test
      - name: Unit tests
        uses: ./.github/actions/unit-tests-build
      
      # # Debug Purpose to check list of files
      # - name: Debug Purpose to check list of files
      #   if: ${{ always() }}
      #   run: |
      #     pwd
      #     ls -a /home/runner/work/practera-app-v2/practera-app-v2/tests

      # # Debug Purpose to check content of file
      # - name: Debug Purpose to check content of file
      #   if: ${{ always() }}
      #   run: |
      #     pwd
      #     cat /home/runner/work/practera-app-v2/practera-app-v2/tests/ut_report.xml

      # Run Sonarcloudscan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
       
      # Run Slack Notification
      - name: Slack Notification
        if: always() # Pick up events even if the job fails or is canceled.
        uses: 8398a7/action-slack@v3
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          MATRIX_CONTEXT: ${{ toJson(matrix) }} # required
        with:
          status: ${{ job.status }}
          author_name: GitHubAction CI for develop branch
          mention: 'here'
          if_mention: failure,cancelled
          job_name: SonarCloud # Match the name above.
          fields: repo,commit,eventName,ref,workflow,message,author,job,took
          custom_payload: |
            {
            username: 'GitHub Action CI WorkFlow',
            icon_emoji: ':github:',
            attachments: [{
              color: '${{ job.status }}' === 'success' ? 'good' : ${{ job.status }}' === 'failure' ? 'danger' : 'warning',
              text:
             `${process.env.AS_REPO}\n
              ${process.env.AS_COMMIT}\n 
              ${process.env.AS_EVENT_NAME}\n
              @${process.env.AS_REF}\n
              @${process.env.AS_WORKFLOW}\n
              ${process.env.AS_MESSAGE}\n
              ${process.env.AS_AUTHOR}\n
              ${process.env.AS_JOB}\n
              ${process.env.AS_TOOK}`,
            }]
            }