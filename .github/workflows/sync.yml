---

################################################
#  GITHUB ACTION WORKFLOW NAME
################################################
name: sync all branches appv3 only


################################################
#  GITHUB ACTION EVENT TRIGGER
################################################
on:
  workflow_dispatch:


################################################
#  GITHUB ACTION JOBS
################################################
jobs:
  target:
    name: target
    runs-on: ubuntu-latest
    permissions: write-all
    timeout-minutes: 15


    steps:
#########################################################
#  GITHUB REPO CHECKOUT TO FETCH ALL BRANCHES
##########################################################
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          ref: release/live-v3

################################################
#  GET BRANCHES
################################################
      - name: Get Branches
        id: BRANCHES
        run: |

          GOLIVE=$(git branch --list --remote "origin/golive/3*" | awk '{sub(/origin\//,""); print}' | sort -V | tail -n 1 | xargs)

          echo "DEV=develop-v3" >> $GITHUB_OUTPUT
          echo "STAGE=trunk-v3" >> $GITHUB_OUTPUT
          echo "LIVE=release/live-v3" >> $GITHUB_OUTPUT
          echo "GOLIVE=$GOLIVE" >> $GITHUB_OUTPUT
    outputs:
      DEV: ${{ steps.BRANCHES.outputs.DEV  }}
      STAGE: ${{ steps.BRANCHES.outputs.STAGE  }}
      LIVE: ${{ steps.BRANCHES.outputs.LIVE  }}
      GOLIVE: ${{ steps.BRANCHES.outputs.GOLIVE  }}
  
################################################
#  RELEASE/LIVE TO GOLIVE BRANCH
################################################
  live-to-golive:
    name: live-to-golive
    runs-on: ubuntu-latest
    permissions: write-all
    timeout-minutes: 15
    needs: target

    steps:
#########################################################
#  GITHUB REPO CHECKOUT TO FETCH ALL BRANCHES
##########################################################
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          ref: ${{ needs.target.outputs.GOLIVE }}
          token: ${{ secrets.PAT }}
      - name: Git config
        run: |
           git config user.name "rodentskie"
           git config user.email "rodentskie@gmail.com"
      - name: Merge live branch to golive
        run: |
          git fetch origin $LIVE
          git merge -s recursive -X theirs --allow-unrelated-histories --commit origin/$LIVE -m "Merge $LIVE into $GOLIVE" || true
          git push -u origin $GOLIVE
        env:
          LIVE: ${{ needs.target.outputs.LIVE }}
          GOLIVE: ${{ needs.target.outputs.GOLIVE }}
    outputs:
      JOB_STATUS: ${{ job.status }}

################################################
#  GOLIVE TO TRUNK
################################################
  golive-to-trunk:
    name: golive-to-trunk
    runs-on: ubuntu-latest
    permissions: write-all
    timeout-minutes: 15
    needs:
      - target
      - live-to-golive

    steps:
#########################################################
#  GITHUB REPO CHECKOUT TO FETCH ALL BRANCHES
##########################################################
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          ref: ${{ needs.target.outputs.STAGE }}
          token: ${{ secrets.PAT }}
      - name: Git config
        run: |
           git config user.name "rodentskie"
           git config user.email "rodentskie@gmail.com"
      - name: Merge golive branch to trunk
        run: |
          git fetch origin $GOLIVE
          git merge -s recursive -X theirs --allow-unrelated-histories --commit origin/$GOLIVE -m "Merge $GOLIVE into $STAGE" || true
          git push -u origin $STAGE
        env:
          GOLIVE: ${{ needs.target.outputs.GOLIVE }}
          STAGE: ${{ needs.target.outputs.STAGE }}
    outputs:
      JOB_STATUS: ${{ job.status }}

################################################
#  TRUNK TO DEV
################################################
  trunk-to-dev:
    name: trunk-to-dev
    runs-on: ubuntu-latest
    permissions: write-all
    timeout-minutes: 15
    needs:
      - target
      - live-to-golive
      - golive-to-trunk

    steps:
#########################################################
#  GITHUB REPO CHECKOUT TO FETCH ALL BRANCHES
##########################################################
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          ref: ${{ needs.target.outputs.DEV }}
          token: ${{ secrets.PAT }}
      - name: Git config
        run: |
           git config user.name "rodentskie"
           git config user.email "rodentskie@gmail.com"
      - name: Merge trunk to dev
        run: |
          git fetch origin $STAGE
          git merge -s recursive -X theirs --allow-unrelated-histories --commit origin/$STAGE -m "Merge $STAGE into $DEV" || true
          git push -u origin $DEV
        env:
          DEV: ${{ needs.target.outputs.DEV }}
          STAGE: ${{ needs.target.outputs.STAGE }}
    outputs:
      JOB_STATUS: ${{ job.status }}
      

################################################
#  SLACK NOTIFICATION
################################################
  slack-notif-sync-branches:
      name: slack-notif-sync-branches
      runs-on: ubuntu-latest
      if: always()
      permissions: write-all
      timeout-minutes: 15
      needs:
        - target
        - live-to-golive
        - golive-to-trunk
        - trunk-to-dev

      steps:
        - name: Slack Notification
          uses: 8398a7/action-slack@v3
          env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
            MATRIX_CONTEXT: ${{ toJson(matrix) }} # required
            LIVE_GOLIVE_JOB_STATUS: ${{ needs.live-to-golive.outputs.JOB_STATUS }}
            GOLIVE_TRUNK_JOB_STATUS: ${{ needs.golive-to-trunk.outputs.JOB_STATUS }}
            TRUNK_DEV_JOB_STATUS: ${{ needs.trunk-to-dev.outputs.JOB_STATUS }}
          with:
            status: custom
            author_name: test auth name
            mention: 'here'
            if_mention: failure,cancelled
            job_name: slack-notif-sync-branches
            fields: repo,commit,eventName,ref,workflow,message,author,job,took
            custom_payload: |
              {
                username: 'GitHub Action CI WorkFlow',
                icon_emoji: ':github:',
                attachments: [{
                  title: ':party_mim_cat: CI Result',
                  text: `${{ job.status }}`.toUpperCase(),
                  actions: [{
                  }],
                  color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                  fields: [
                    {
                      title: 'Workflow',
                      value: process.env.AS_WORKFLOW,
                      short: true
                    },
                    {
                      title: 'Job',
                      value: process.env.AS_JOB,
                      short: true
                    },
                    {
                      title: 'Author',
                      value: process.env.AS_AUTHOR,
                      short: true
                    },
                    {
                      title: 'Repo',
                      value: process.env.AS_REPO,
                      short: true
                    },
                    {
                      title: 'release/live to golive Status',
                      value: process.env.LIVE_GOLIVE_JOB_STATUS,
                      short: true
                    },
                    {
                      title: 'golive to trunk Status',
                      value: process.env.GOLIVE_TRUNK_JOB_STATUS,
                      short: true
                    },
                    {
                      title: 'trunk to develop Status',
                      value: process.env.TRUNK_DEV_JOB_STATUS,
                      short: true
                    },
                  ],
                }]
              }